#N canvas 578 32 565 513 10;
#X obj 4 3 cnv 15 301 42 empty empty chance 20 20 2 37 #e0e0e0 #000000
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 4 3 graph;
#X obj 25 40 cnv 4 4 4 empty empty Weighted 0 28 2 18 #e0e0e0 #000000
0;
#X obj 103 39 cnv 4 4 4 empty empty random 0 28 2 18 #e0e0e0 #000000
0;
#X obj 5 484 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020
0;
#X obj 6 340 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000
0;
#X obj 6 444 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000
0;
#X obj 115 350 cnv 17 3 17 empty empty n 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 115 262 cnv 17 3 45 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X obj 6 252 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000
0;
#X msg 226 165 seed \$1;
#X obj 226 146 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dcdcdc #000000 #000000 0 256;
#X obj 190 149 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 190 221 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 185 262 bang;
#X text 229 261 - a bang to be passed or not;
#X text 185 349 bang;
#X text 229 349 - random bangs;
#X obj 248 221 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 6 397 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000
0;
#X text 137 277 seed <float>;
#X text 224 222 25%;
#X obj 307 221 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 283 222 25%;
#X text 164 222 50%;
#X obj 190 191 else/chance 50 25 25;
#X obj 115 372 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 179 372 float;
#N canvas 566 79 410 549 default 0;
#X obj 111 76 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X obj 111 148 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 180 148 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 85 149 50%;
#X obj 111 118 else/chance, f 12;
#X text 156 149 50%;
#X obj 143 445 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 143 507 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 230 507 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 143 477 else/chance 70, f 15;
#X obj 91 222 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X obj 91 294 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X obj 160 294 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 91 264 else/chance, f 12;
#X text 190 237 <= sets chance of left output;
#X msg 160 237 30;
#X obj 160 214 loadbang;
#X text 65 295 30%;
#X text 136 295 70%;
#X text 208 253 chance of right output is 100-input, f 20;
#X floatatom 230 448 5 0 0 0 - - - 0;
#X text 54 18 If no argument is given \, the chances are 50/50! Moreover
\, you get a float inlet to set the chance as a percentage value.,
f 51;
#X text 41 343 If just one float is given \, it is considered as a
percentage value and the second bang outlet has "100 - argument" number
of chances. You also have an inlet to update the argument for the percentage
value that the output will be from the left outlet., f 47;
#X connect 0 0 4 0;
#X connect 4 0 1 0;
#X connect 4 1 2 0;
#X connect 6 0 9 0;
#X connect 9 0 7 0;
#X connect 9 1 8 0;
#X connect 10 0 13 0;
#X connect 13 0 11 0;
#X connect 13 1 12 0;
#X connect 15 0 13 1;
#X connect 16 0 15 0;
#X connect 20 0 9 1;
#X restore 470 153 pd default;
#X text 118 453 1) list -;
#X text 183 453 list of probabilities (default 50 50). Check [pd default]
for more info if only one float is given;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc
0;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc
0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 305 3 graph;
#X text 177 423 -index: sets to index mode;
#X text 70 87 When [chance] receives a bang \, it outputs to an outlet
according to its chance (probability weight). The total number is the
sum of all arguments. It also has an index mode where it outputs the
outlet index number instead., f 70;
#N canvas 780 200 433 259 index 0;
#X obj 129 106 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 129 169 else/display;
#X obj 129 139 else/chance -index 50 25 25;
#X text 61 28 With the -index flag \, the index number is output (from
1). Below there's a 50% chance of "1" being output and 25% chance for
each "2" and "3"., f 49;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 481 194 pd index;
#X text 229 372 - index number if in index mode;
#X obj 115 314 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0
;
#X text 179 314 float;
#X text 229 314 - sets chance number if only one argument;
#X text 185 292 list;
#X text 229 291 - updates arguments if more than 1 is given;
#N canvas 566 79 397 532 list 0;
#X obj 103 369 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 103 473 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 161 473 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 103 441 else/chance 30 40 30;
#X obj 220 473 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X msg 131 408 10 20 50;
#X obj 110 118 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 110 220 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 197 220 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 110 190 else/chance 7 1;
#X msg 135 156 50 50;
#X text 54 21 When you give it two or more arguments \, then [chance]
takes a list that updates all arguments. Values are not percentage
anymore \, so below you have \, by default \, "7 out of 8" on the left
outlet and "1 out of 8 on the right outlet., f 40;
#X text 176 154 <= sets to 50/50;
#X text 55 284 Below \, by default \, we have 30 \, 40 and 30 out of
100 chances (so it's like a percentage). But the message sets to 10
\, 20 and 50 out of 80 chances., f 44;
#X connect 0 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 2 0;
#X connect 3 2 4 0;
#X connect 5 0 3 0;
#X connect 6 0 9 0;
#X connect 9 0 7 0;
#X connect 9 1 8 0;
#X connect 10 0 9 0;
#X restore 487 173 pd list;
#N canvas 490 159 777 307 seed 0;
#X text 43 61 Pseudo random number generators aren't true random number
generators. Instead \, an algorithm is used to provide a sequence of
numbers that seems random. The same sequence can be reproduced if you
set a "seed" value \, which can be any integer number., f 52;
#X text 43 217 You can set a seed with the '-seed' flag. If you don't
supply it \, each object gets its own seed internal seed. If you send
a 'seed' message without float \, the object also gets a unique seed
value., f 52;
#X obj 521 105 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 609 105 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 585 106 25%;
#X obj 698 105 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 674 106 25%;
#X text 495 106 50%;
#X obj 521 75 else/chance -seed 123 50 25 25;
#X msg 415 136 seed;
#X msg 405 107 seed 123;
#X obj 391 169 s \$0-chance;
#X obj 521 48 r \$0-chance;
#X obj 391 77 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X obj 521 205 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 609 205 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 585 206 25%;
#X obj 698 205 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X text 674 206 25%;
#X text 495 206 50%;
#X obj 521 175 else/chance -seed 123 50 25 25;
#X obj 521 148 r \$0-chance;
#X text 43 140 Seeds are kept locally \, which means that if two [chance]
objects are seeded the same they will have the same output. Conversely
\, you can seed the same [chance] object twice with the same seed to
repeat the output., f 52;
#X connect 8 0 2 0;
#X connect 8 1 3 0;
#X connect 8 2 5 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 12 0 8 0;
#X connect 13 0 11 0;
#X connect 20 0 14 0;
#X connect 20 1 15 0;
#X connect 20 2 17 0;
#X connect 21 0 20 0;
#X restore 487 217 pd seed;
#X text 135 406 -seed <float>: seed value (default: unique internal)
;
#X text 229 276 - a float sets seed \, no float sets a unique internal
;
#X text 26 187 see also:;
#X obj 26 210 else/chance~;
#X connect 10 0 25 0;
#X connect 11 0 10 0;
#X connect 12 0 25 0;
#X connect 25 0 13 0;
#X connect 25 1 18 0;
#X connect 25 2 22 0;
